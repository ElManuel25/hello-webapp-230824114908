# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy JAR app to Azure Web App - gdlfsamuelemmanuel

on:
  push:
    branches:
      - maven
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Git
        run: |
          echo "##vso[task.setvariable variable=DATE]$(Get-Date -Format yyyyMMdd-HHmmss)"
          
      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      

      - name: Build with Maven
        #run: mvn clean install
        run: mvn clean install -Dmaven.test.failure.ignore=true

      - name: Maven Test
        #run: mvn test
        run: mvn test -Dmaven.test.failure.ignore=true



      - name: Publish test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./target/surefire-reports

      - name: Publish code coverage
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: ./target/site/jacoco
        
      - name: Publish test coverage results
        uses: PavanMudigonda/jacoco-reporter@v4.8
        with:
          coverage_results_path: 'target/site/jacoco/jacoco.xml'
          coverage_report_title: 'Test coverage results'
          coverage_report_name: 'Test coverage results'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: true
          minimum_coverage: 50
          fail_below_threshold: true
          publish_only_summary: false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

      # Añade este paso para construir la imagen Docker
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .  # Usa el contexto actual
          push: false  # No necesitamos subir la imagen aquí, lo haremos después

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .  # Usa el contexto actual
          push: true  # Ahora necesitamos subir la imagen

          # Reemplaza 'nombre-imagen' y 'etiqueta' con tus propios valores
          tags: 'nombre-registry.azurecr.io/nombre-imagen:${{ env.DATE }}'


          # Reemplaza 'nombre-registry' con el nombre de tu ACR
          username: ${{ elmanuel25 }}
          password: ${{ felicidad0 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'gdlfsamuelemmanuel'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ABA675EA1BA240C1964444D40E09CA42 }}
          images: 'gdlcemmanuelsamuel.azurecr.io/petclinic-app:v1'  # La imagen que acabas de construir

